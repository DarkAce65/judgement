[tool.poetry]
name = "server"
version = "0.1.0"
description = ""
authors = []

[tool.isort]
profile = "black"
src_paths = ["model_generator", "server", "main.py"]

[tool.black]
line-length = 90
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
)/
'''

[tool.pylint.messages_control]
disable = [
  "misplaced-comparison-constant",
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "too-few-public-methods",
  "unsubscriptable-object"
]
extension-pkg-whitelist = ["pydantic"]

[tool.taskipy.tasks]
pre_format = "isort ."
format = "black ."
pre_lint = "task format"
lint = "task lint_mypy && task lint_pylint"
lint_mypy = "mypy model_generator server main.py"
lint_pylint = "pylint model_generator server main.py"
test = "python -m unittest"
yarn = "yarn --cwd ./model_generator/ install --silent"
pre_generate = "task yarn"
pre_generate_watch = "task yarn"
generate = "python -m model_generator.model_generator --out_dir ../client/generated_types"
generate_watch = "python -m model_generator.watcher --out_dir ../client/generated_types"

[tool.poetry.dependencies]
python = "^3.9"
debugpy = { version = "^1.2.1", optional = true }
fastapi = "^0.70.1"
psycopg2 = "^2.9.3"
pydantic-to-typescript = { git = "https://github.com/phillipdupuis/pydantic-to-typescript.git", rev = "a8f182d", optional = true }
pyhumps = "^3.0.2"
python-socketio = "^5.5.0"
uvicorn = { version = "^0.16.0", extras = ["standard"] }
watchgod = { version = "^0.7", optional = true }

[tool.poetry.dev-dependencies]
black = "^21.12b0"
isort = "^5.10.1"
mypy = "^0.910"
pylint = "^2.12.2"
taskipy = "^1.6.0"
types-psycopg2 = "^2.9.5"

[tool.poetry.extras]
debug = ["debugpy"]
generator = ["pydantic-to-typescript", "watchgod"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
