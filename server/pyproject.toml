[tool.poetry]
name = "server"
version = "0.1.0"
description = ""
authors = []

[tool.ruff]
line-length = 90

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
extend-select = ["I", "TID", "B"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
ignore_missing_imports = true
no_implicit_reexport = true

warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = true

disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true

warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.taskipy.tasks]
format = "ruff format ."
pre_lint = "task format"
lint_ruff = "ruff check --fix model_generator server main.py"
lint_mypy = "mypy model_generator server main.py"
lint = "task lint_ruff && task lint_mypy"
test = "python -m unittest"
yarn = "yarn --cwd ./model_generator/ install --silent"
pre_generate = "task yarn"
pre_generate_watch = "task yarn"
generate = "python -m model_generator.model_generator --out_dir ../client/generated_types"
generate_watch = "python -m model_generator.model_generator --watch --out_dir ../client/generated_types"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
psycopg = "^3.2.1"
python-socketio = "^5.11.3"
uvicorn = { version = "^0.30.1", extras = ["standard"] }

[tool.poetry.group.debug]
optional = true

[tool.poetry.group.debug.dependencies]
debugpy = "^1.8.2"

[tool.poetry.group.generator]
optional = true

[tool.poetry.group.generator.dependencies]
watchfiles = "^0.22.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.1"
ruff = "^0.5.7"
taskipy = "^1.13.0"
types-psycopg2 = "^2.9.21"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
